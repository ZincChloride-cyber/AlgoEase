{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nimport { BoxesResponse } from './models/types';\n/**\r\n * Given an application ID, return all the box names associated with the app.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * const index = 60553466;\r\n * const boxesResponse = await algodClient.getApplicationBoxes(index).max(3).do();\r\n * const boxNames = boxesResponse.boxes.map(box => box.name);\r\n * ```\r\n *\r\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2applicationsapplication-idboxes)\r\n * @param index - The application ID to look up.\r\n * @category GET\r\n */\nexport default class GetApplicationBoxes extends JSONRequest {\n  constructor(c, intDecoding, index) {\n    super(c, intDecoding);\n    this.index = index;\n    this.index = index;\n    this.query.max = 0;\n  }\n  /**\r\n   * @returns `/v2/applications/${index}/boxes`\r\n   */\n  path() {\n    return `/v2/applications/${this.index}/boxes`;\n  }\n  /**\r\n   * Limit results for pagination.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const maxResults = 20;\r\n   * const boxesResult = await algodClient\r\n   *        .GetApplicationBoxes(1234)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param limit - maximum number of results to return.\r\n   * @category query\r\n   */\n  max(max) {\n    this.query.max = max;\n    return this;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body) {\n    return BoxesResponse.from_obj_for_encoding(body);\n  }\n}","map":{"version":3,"names":["JSONRequest","BoxesResponse","GetApplicationBoxes","constructor","c","intDecoding","index","query","max","path","prepare","body","from_obj_for_encoding"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\client\\v2\\algod\\getApplicationBoxes.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\r\nimport HTTPClient from '../../client';\r\nimport IntDecoding from '../../../types/intDecoding';\r\nimport { BoxesResponse } from './models/types';\r\n\r\n/**\r\n * Given an application ID, return all the box names associated with the app.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * const index = 60553466;\r\n * const boxesResponse = await algodClient.getApplicationBoxes(index).max(3).do();\r\n * const boxNames = boxesResponse.boxes.map(box => box.name);\r\n * ```\r\n *\r\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2applicationsapplication-idboxes)\r\n * @param index - The application ID to look up.\r\n * @category GET\r\n */\r\nexport default class GetApplicationBoxes extends JSONRequest<\r\n  BoxesResponse,\r\n  Record<string, any>\r\n> {\r\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\r\n    super(c, intDecoding);\r\n    this.index = index;\r\n    this.query.max = 0;\r\n  }\r\n\r\n  /**\r\n   * @returns `/v2/applications/${index}/boxes`\r\n   */\r\n  path() {\r\n    return `/v2/applications/${this.index}/boxes`;\r\n  }\r\n\r\n  /**\r\n   * Limit results for pagination.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const maxResults = 20;\r\n   * const boxesResult = await algodClient\r\n   *        .GetApplicationBoxes(1234)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param limit - maximum number of results to return.\r\n   * @category query\r\n   */\r\n  max(max: number) {\r\n    this.query.max = max;\r\n    return this;\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  prepare(body: Record<string, any>): BoxesResponse {\r\n    return BoxesResponse.from_obj_for_encoding(body);\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAGxC,SAASC,aAAa,QAAQ,gBAAgB;AAE9C;;;;;;;;;;;;;;AAcA,eAAc,MAAOC,mBAAoB,SAAQF,WAGhD;EACCG,YAAYC,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IACxE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IADsC,KAAAC,KAAK,GAALA,KAAK;IAEhE,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,CAACC,GAAG,GAAG,CAAC;EACpB;EAEA;;;EAGAC,IAAIA,CAAA;IACF,OAAO,oBAAoB,IAAI,CAACH,KAAK,QAAQ;EAC/C;EAEA;;;;;;;;;;;;;;;EAeAE,GAAGA,CAACA,GAAW;IACb,IAAI,CAACD,KAAK,CAACC,GAAG,GAAGA,GAAG;IACpB,OAAO,IAAI;EACb;EAEA;EACAE,OAAOA,CAACC,IAAyB;IAC/B,OAAOV,aAAa,CAACW,qBAAqB,CAACD,IAAI,CAAC;EAClD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}