{"ast":null,"code":"import { ABIMethod, getMethodByName } from './method';\nexport class ABIContract {\n  constructor(params) {\n    if (typeof params.name !== 'string' || !Array.isArray(params.methods) || params.networks && typeof params.networks !== 'object') {\n      throw new Error('Invalid ABIContract parameters');\n    }\n    this.name = params.name;\n    this.description = params.desc;\n    this.networks = params.networks ? {\n      ...params.networks\n    } : {};\n    this.methods = params.methods.map(method => new ABIMethod(method));\n    this.events = params.events;\n  }\n  toJSON() {\n    return {\n      name: this.name,\n      desc: this.description,\n      networks: this.networks,\n      methods: this.methods.map(method => method.toJSON()),\n      events: this.events\n    };\n  }\n  getMethodByName(name) {\n    return getMethodByName(this.methods, name);\n  }\n}","map":{"version":3,"names":["ABIMethod","getMethodByName","ABIContract","constructor","params","name","Array","isArray","methods","networks","Error","description","desc","map","method","events","toJSON"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\abi\\contract.ts"],"sourcesContent":["import { ABIMethod, ABIMethodParams, getMethodByName } from './method';\r\nimport { ARC28Event } from './event';\r\n\r\nexport interface ABIContractNetworkInfo {\r\n  appID: number;\r\n}\r\n\r\nexport interface ABIContractNetworks {\r\n  [network: string]: ABIContractNetworkInfo;\r\n}\r\n\r\nexport interface ABIContractParams {\r\n  name: string;\r\n  desc?: string;\r\n  networks?: ABIContractNetworks;\r\n  methods: ABIMethodParams[];\r\n  events?: ARC28Event[];\r\n}\r\n\r\nexport class ABIContract {\r\n  public readonly name: string;\r\n  public readonly description?: string;\r\n  public readonly networks: ABIContractNetworks;\r\n  public readonly methods: ABIMethod[];\r\n  /** [ARC-28](https://arc.algorand.foundation/ARCs/arc-0028) events that MAY be emitted by this contract */\r\n  public readonly events?: ARC28Event[];\r\n\r\n  constructor(params: ABIContractParams) {\r\n    if (\r\n      typeof params.name !== 'string' ||\r\n      !Array.isArray(params.methods) ||\r\n      (params.networks && typeof params.networks !== 'object')\r\n    ) {\r\n      throw new Error('Invalid ABIContract parameters');\r\n    }\r\n\r\n    this.name = params.name;\r\n    this.description = params.desc;\r\n    this.networks = params.networks ? { ...params.networks } : {};\r\n    this.methods = params.methods.map((method) => new ABIMethod(method));\r\n    this.events = params.events;\r\n  }\r\n\r\n  toJSON(): ABIContractParams {\r\n    return {\r\n      name: this.name,\r\n      desc: this.description,\r\n      networks: this.networks,\r\n      methods: this.methods.map((method) => method.toJSON()),\r\n      events: this.events,\r\n    };\r\n  }\r\n\r\n  getMethodByName(name: string): ABIMethod {\r\n    return getMethodByName(this.methods, name);\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAmBC,eAAe,QAAQ,UAAU;AAmBtE,OAAM,MAAOC,WAAW;EAQtBC,YAAYC,MAAyB;IACnC,IACE,OAAOA,MAAM,CAACC,IAAI,KAAK,QAAQ,IAC/B,CAACC,KAAK,CAACC,OAAO,CAACH,MAAM,CAACI,OAAO,CAAC,IAC7BJ,MAAM,CAACK,QAAQ,IAAI,OAAOL,MAAM,CAACK,QAAQ,KAAK,QAAS,EACxD;MACA,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;;IAGnD,IAAI,CAACL,IAAI,GAAGD,MAAM,CAACC,IAAI;IACvB,IAAI,CAACM,WAAW,GAAGP,MAAM,CAACQ,IAAI;IAC9B,IAAI,CAACH,QAAQ,GAAGL,MAAM,CAACK,QAAQ,GAAG;MAAE,GAAGL,MAAM,CAACK;IAAQ,CAAE,GAAG,EAAE;IAC7D,IAAI,CAACD,OAAO,GAAGJ,MAAM,CAACI,OAAO,CAACK,GAAG,CAAEC,MAAM,IAAK,IAAId,SAAS,CAACc,MAAM,CAAC,CAAC;IACpE,IAAI,CAACC,MAAM,GAAGX,MAAM,CAACW,MAAM;EAC7B;EAEAC,MAAMA,CAAA;IACJ,OAAO;MACLX,IAAI,EAAE,IAAI,CAACA,IAAI;MACfO,IAAI,EAAE,IAAI,CAACD,WAAW;MACtBF,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBD,OAAO,EAAE,IAAI,CAACA,OAAO,CAACK,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACE,MAAM,EAAE,CAAC;MACtDD,MAAM,EAAE,IAAI,CAACA;KACd;EACH;EAEAd,eAAeA,CAACI,IAAY;IAC1B,OAAOJ,eAAe,CAAC,IAAI,CAACO,OAAO,EAAEH,IAAI,CAAC;EAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}