{"ast":null,"code":"/**\r\n * Configure how integers in JSON response will be decoded.\r\n */\nvar IntDecoding;\n(function (IntDecoding) {\n  /**\r\n   * All integers will be decoded as Numbers, meaning any values greater than\r\n   * Number.MAX_SAFE_INTEGER will lose precision.\r\n   */\n  IntDecoding[\"DEFAULT\"] = \"default\";\n  /**\r\n   * All integers will be decoded as Numbers, but if any values are greater than\r\n   * Number.MAX_SAFE_INTEGER an error will be thrown.\r\n   */\n  IntDecoding[\"SAFE\"] = \"safe\";\n  /**\r\n   * Integers will be decoded as Numbers if they are less than or equal to\r\n   * Number.MAX_SAFE_INTEGER, otherwise they will be decoded as BigInts.\r\n   */\n  IntDecoding[\"MIXED\"] = \"mixed\";\n  /**\r\n   * All integers will be decoded as BigInts.\r\n   */\n  IntDecoding[\"BIGINT\"] = \"bigint\";\n})(IntDecoding || (IntDecoding = {}));\nexport default IntDecoding;","map":{"version":3,"names":["IntDecoding"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\types\\intDecoding.ts"],"sourcesContent":["/**\r\n * Configure how integers in JSON response will be decoded.\r\n */\r\nenum IntDecoding {\r\n  /**\r\n   * All integers will be decoded as Numbers, meaning any values greater than\r\n   * Number.MAX_SAFE_INTEGER will lose precision.\r\n   */\r\n  DEFAULT = 'default',\r\n\r\n  /**\r\n   * All integers will be decoded as Numbers, but if any values are greater than\r\n   * Number.MAX_SAFE_INTEGER an error will be thrown.\r\n   */\r\n  SAFE = 'safe',\r\n\r\n  /**\r\n   * Integers will be decoded as Numbers if they are less than or equal to\r\n   * Number.MAX_SAFE_INTEGER, otherwise they will be decoded as BigInts.\r\n   */\r\n  MIXED = 'mixed',\r\n\r\n  /**\r\n   * All integers will be decoded as BigInts.\r\n   */\r\n  BIGINT = 'bigint',\r\n}\r\n\r\nexport default IntDecoding;\r\n"],"mappings":"AAAA;;;AAGA,IAAKA,WAuBJ;AAvBD,WAAKA,WAAW;EACd;;;;EAIAA,WAAA,uBAAmB;EAEnB;;;;EAIAA,WAAA,iBAAa;EAEb;;;;EAIAA,WAAA,mBAAe;EAEf;;;EAGAA,WAAA,qBAAiB;AACnB,CAAC,EAvBIA,WAAW,KAAXA,WAAW;AAyBhB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}