{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class StatusAfterBlock extends JSONRequest {\n  constructor(c, intDecoding, round) {\n    super(c, intDecoding);\n    this.round = round;\n    if (!Number.isInteger(round)) throw Error('round should be an integer');\n    this.round = round;\n  }\n  path() {\n    return `/v2/status/wait-for-block-after/${this.round}`;\n  }\n}","map":{"version":3,"names":["JSONRequest","StatusAfterBlock","constructor","c","intDecoding","round","Number","isInteger","Error","path"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\client\\v2\\algod\\statusAfterBlock.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\r\nimport HTTPClient from '../../client';\r\nimport IntDecoding from '../../../types/intDecoding';\r\n\r\nexport default class StatusAfterBlock extends JSONRequest {\r\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\r\n    super(c, intDecoding);\r\n    if (!Number.isInteger(round)) throw Error('round should be an integer');\r\n    this.round = round;\r\n  }\r\n\r\n  path() {\r\n    return `/v2/status/wait-for-block-after/${this.round}`;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,gBAAiB,SAAQD,WAAW;EACvDE,YAAYC,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IACxE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IADsC,KAAAC,KAAK,GAALA,KAAK;IAEhE,IAAI,CAACC,MAAM,CAACC,SAAS,CAACF,KAAK,CAAC,EAAE,MAAMG,KAAK,CAAC,4BAA4B,CAAC;IACvE,IAAI,CAACH,KAAK,GAAGA,KAAK;EACpB;EAEAI,IAAIA,CAAA;IACF,OAAO,mCAAmC,IAAI,CAACJ,KAAK,EAAE;EACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}