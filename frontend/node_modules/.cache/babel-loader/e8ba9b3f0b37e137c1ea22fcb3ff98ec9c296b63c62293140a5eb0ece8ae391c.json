{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class LookupApplications extends JSONRequest {\n  /**\r\n   * Returns information about the passed application.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const appId = 60553466;\r\n   * const appInfo = await indexerClient.lookupApplications(appId).do();\r\n   * ```\r\n   *\r\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-id)\r\n   * @param index - The ID of the application to look up.\r\n   * @category GET\r\n   */\n  constructor(c, intDecoding, index) {\n    super(c, intDecoding);\n    this.index = index;\n    this.index = index;\n  }\n  /**\r\n   * @returns `/v2/applications/${index}`\r\n   */\n  path() {\n    return `/v2/applications/${this.index}`;\n  }\n  /**\r\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\r\n   *\r\n   * #### Example 1\r\n   * ```typescript\r\n   * const appId = 60553466;\r\n   * const appInfo = await indexerClient\r\n   *        .lookupApplications(appId)\r\n   *        .includeAll(false)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * #### Example 2\r\n   * ```typescript\r\n   * const appId = 60553466;\r\n   * const appInfo = await indexerClient\r\n   *        .lookupApplications(appId)\r\n   *        .includeAll()\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param value - default true when called without passing a value\r\n   * @category query\r\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}","map":{"version":3,"names":["JSONRequest","LookupApplications","constructor","c","intDecoding","index","path","includeAll","value","query"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\client\\v2\\indexer\\lookupApplications.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\r\nimport HTTPClient from '../../client';\r\nimport IntDecoding from '../../../types/intDecoding';\r\n\r\nexport default class LookupApplications extends JSONRequest {\r\n  /**\r\n   * Returns information about the passed application.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const appId = 60553466;\r\n   * const appInfo = await indexerClient.lookupApplications(appId).do();\r\n   * ```\r\n   *\r\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-id)\r\n   * @param index - The ID of the application to look up.\r\n   * @category GET\r\n   */\r\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\r\n    super(c, intDecoding);\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * @returns `/v2/applications/${index}`\r\n   */\r\n  path() {\r\n    return `/v2/applications/${this.index}`;\r\n  }\r\n\r\n  /**\r\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\r\n   *\r\n   * #### Example 1\r\n   * ```typescript\r\n   * const appId = 60553466;\r\n   * const appInfo = await indexerClient\r\n   *        .lookupApplications(appId)\r\n   *        .includeAll(false)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * #### Example 2\r\n   * ```typescript\r\n   * const appId = 60553466;\r\n   * const appInfo = await indexerClient\r\n   *        .lookupApplications(appId)\r\n   *        .includeAll()\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param value - default true when called without passing a value\r\n   * @category query\r\n   */\r\n  includeAll(value = true) {\r\n    this.query['include-all'] = value;\r\n    return this;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,kBAAmB,SAAQD,WAAW;EACzD;;;;;;;;;;;;;EAaAE,YAAYC,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IACxE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IADsC,KAAAC,KAAK,GAALA,KAAK;IAEhE,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEA;;;EAGAC,IAAIA,CAAA;IACF,OAAO,oBAAoB,IAAI,CAACD,KAAK,EAAE;EACzC;EAEA;;;;;;;;;;;;;;;;;;;;;;;;EAwBAE,UAAUA,CAACC,KAAK,GAAG,IAAI;IACrB,IAAI,CAACC,KAAK,CAAC,aAAa,CAAC,GAAGD,KAAK;IACjC,OAAO,IAAI;EACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}