{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class LookupAccountAppLocalStates extends JSONRequest {\n  /**\r\n   * Returns application local state about the given account.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const accountAppLocalStates = await indexerClient.lookupAccountAppLocalStates(address).do();\r\n   * ```\r\n   *\r\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idapps-local-state)\r\n   * @param account - The address of the account to look up.\r\n   * @category GET\r\n   */\n  constructor(c, intDecoding, account) {\n    super(c, intDecoding);\n    this.account = account;\n    this.account = account;\n  }\n  /**\r\n   * @returns `/v2/accounts/${account}/apps-local-state`\r\n   */\n  path() {\n    return `/v2/accounts/${this.account}/apps-local-state`;\n  }\n  /**\r\n   * Add a limit for filter.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const maxResults = 20;\r\n   * const accountAssets = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param limit - maximum number of results to return.\r\n   * @category query\r\n   */\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  }\n  /**\r\n   * Specify round to filter with.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const targetBlock = 18309917;\r\n   * const accountAssets = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .round(targetBlock)\r\n   *        .do();\r\n   * ```\r\n   * @param round\r\n   * @category query\r\n   */\n  round(round) {\n    this.query.round = round;\n    return this;\n  }\n  /**\r\n   * Specify the next page of results.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const maxResults = 20;\r\n   *\r\n   * const accountAssetsPage1 = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   *\r\n   * const accountAssetsPage2 = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .limit(maxResults)\r\n   *        .next(accountAssetsPage1[\"next-token\"])\r\n   *        .do();\r\n   * ```\r\n   * @param nextToken - provided by the previous results.\r\n   */\n  nextToken(nextToken) {\n    this.query.next = nextToken;\n    return this;\n  }\n  /**\r\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const accountAssets = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .includeAll(false)\r\n   *        .do();\r\n   * ```\r\n   * @param value\r\n   * @category query\r\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n  /**\r\n   * Specify an applicationID to search for.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const applicationID = 163650;\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const accountApplications = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .applicationID(applicationID)\r\n   *        .do();\r\n   * ```\r\n   * @param index - the applicationID\r\n   * @category query\r\n   */\n  applicationID(index) {\n    this.query['application-id'] = index;\n    return this;\n  }\n}","map":{"version":3,"names":["JSONRequest","LookupAccountAppLocalStates","constructor","c","intDecoding","account","path","limit","query","round","nextToken","next","includeAll","value","applicationID","index"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\client\\v2\\indexer\\lookupAccountAppLocalStates.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\r\nimport HTTPClient from '../../client';\r\nimport IntDecoding from '../../../types/intDecoding';\r\n\r\nexport default class LookupAccountAppLocalStates extends JSONRequest {\r\n  /**\r\n   * Returns application local state about the given account.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const accountAppLocalStates = await indexerClient.lookupAccountAppLocalStates(address).do();\r\n   * ```\r\n   *\r\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idapps-local-state)\r\n   * @param account - The address of the account to look up.\r\n   * @category GET\r\n   */\r\n  constructor(\r\n    c: HTTPClient,\r\n    intDecoding: IntDecoding,\r\n    private account: string\r\n  ) {\r\n    super(c, intDecoding);\r\n    this.account = account;\r\n  }\r\n\r\n  /**\r\n   * @returns `/v2/accounts/${account}/apps-local-state`\r\n   */\r\n  path() {\r\n    return `/v2/accounts/${this.account}/apps-local-state`;\r\n  }\r\n\r\n  /**\r\n   * Add a limit for filter.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const maxResults = 20;\r\n   * const accountAssets = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param limit - maximum number of results to return.\r\n   * @category query\r\n   */\r\n  limit(limit: number) {\r\n    this.query.limit = limit;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Specify round to filter with.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const targetBlock = 18309917;\r\n   * const accountAssets = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .round(targetBlock)\r\n   *        .do();\r\n   * ```\r\n   * @param round\r\n   * @category query\r\n   */\r\n  round(round: number) {\r\n    this.query.round = round;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Specify the next page of results.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const maxResults = 20;\r\n   *\r\n   * const accountAssetsPage1 = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   *\r\n   * const accountAssetsPage2 = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .limit(maxResults)\r\n   *        .next(accountAssetsPage1[\"next-token\"])\r\n   *        .do();\r\n   * ```\r\n   * @param nextToken - provided by the previous results.\r\n   */\r\n  nextToken(nextToken: string) {\r\n    this.query.next = nextToken;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const accountAssets = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .includeAll(false)\r\n   *        .do();\r\n   * ```\r\n   * @param value\r\n   * @category query\r\n   */\r\n  includeAll(value = true) {\r\n    this.query['include-all'] = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Specify an applicationID to search for.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const applicationID = 163650;\r\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\r\n   * const accountApplications = await indexerClient\r\n   *        .lookupAccountAppLocalStates(address)\r\n   *        .applicationID(applicationID)\r\n   *        .do();\r\n   * ```\r\n   * @param index - the applicationID\r\n   * @category query\r\n   */\r\n  applicationID(index: number) {\r\n    this.query['application-id'] = index;\r\n    return this;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,2BAA4B,SAAQD,WAAW;EAClE;;;;;;;;;;;;;EAaAE,YACEC,CAAa,EACbC,WAAwB,EAChBC,OAAe;IAEvB,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IAFb,KAAAC,OAAO,GAAPA,OAAO;IAGf,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEA;;;EAGAC,IAAIA,CAAA;IACF,OAAO,gBAAgB,IAAI,CAACD,OAAO,mBAAmB;EACxD;EAEA;;;;;;;;;;;;;;;;EAgBAE,KAAKA,CAACA,KAAa;IACjB,IAAI,CAACC,KAAK,CAACD,KAAK,GAAGA,KAAK;IACxB,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;EAeAE,KAAKA,CAACA,KAAa;IACjB,IAAI,CAACD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACxB,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;;;;;;;EAqBAC,SAASA,CAACA,SAAiB;IACzB,IAAI,CAACF,KAAK,CAACG,IAAI,GAAGD,SAAS;IAC3B,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;EAcAE,UAAUA,CAACC,KAAK,GAAG,IAAI;IACrB,IAAI,CAACL,KAAK,CAAC,aAAa,CAAC,GAAGK,KAAK;IACjC,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;EAeAC,aAAaA,CAACC,KAAa;IACzB,IAAI,CAACP,KAAK,CAAC,gBAAgB,CAAC,GAAGO,KAAK;IACpC,OAAO,IAAI;EACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}