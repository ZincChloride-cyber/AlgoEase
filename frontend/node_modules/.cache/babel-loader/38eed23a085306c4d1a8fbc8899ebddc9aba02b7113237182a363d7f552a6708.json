{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class GetBlockTxids extends JSONRequest {\n  constructor(c, intDecoding, roundNumber) {\n    super(c, intDecoding);\n    if (!Number.isInteger(roundNumber)) throw Error('roundNumber should be an integer');\n    this.round = roundNumber;\n  }\n  path() {\n    return `/v2/blocks/${this.round}/txids`;\n  }\n}","map":{"version":3,"names":["JSONRequest","GetBlockTxids","constructor","c","intDecoding","roundNumber","Number","isInteger","Error","round","path"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\client\\v2\\algod\\getBlockTxids.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\r\nimport HTTPClient from '../../client';\r\nimport IntDecoding from '../../../types/intDecoding';\r\n\r\nexport default class GetBlockTxids extends JSONRequest {\r\n  round: number;\r\n\r\n  constructor(c: HTTPClient, intDecoding: IntDecoding, roundNumber: number) {\r\n    super(c, intDecoding);\r\n    if (!Number.isInteger(roundNumber))\r\n      throw Error('roundNumber should be an integer');\r\n    this.round = roundNumber;\r\n  }\r\n\r\n  path() {\r\n    return `/v2/blocks/${this.round}/txids`;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,aAAc,SAAQD,WAAW;EAGpDE,YAAYC,CAAa,EAAEC,WAAwB,EAAEC,WAAmB;IACtE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IACrB,IAAI,CAACE,MAAM,CAACC,SAAS,CAACF,WAAW,CAAC,EAChC,MAAMG,KAAK,CAAC,kCAAkC,CAAC;IACjD,IAAI,CAACC,KAAK,GAAGJ,WAAW;EAC1B;EAEAK,IAAIA,CAAA;IACF,OAAO,cAAc,IAAI,CAACD,KAAK,QAAQ;EACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}