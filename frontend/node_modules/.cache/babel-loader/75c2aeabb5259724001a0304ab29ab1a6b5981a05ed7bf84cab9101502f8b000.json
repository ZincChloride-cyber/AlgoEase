{"ast":null,"code":"import * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\n/**\r\n * generateAccount returns a new Algorand address and its corresponding secret key\r\n */\nexport default function generateAccount() {\n  const keys = nacl.keyPair();\n  const encodedPk = address.encodeAddress(keys.publicKey);\n  return {\n    addr: encodedPk,\n    sk: keys.secretKey\n  };\n}","map":{"version":3,"names":["nacl","address","generateAccount","keys","keyPair","encodedPk","encodeAddress","publicKey","addr","sk","secretKey"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\account.ts"],"sourcesContent":["import * as nacl from './nacl/naclWrappers';\r\nimport * as address from './encoding/address';\r\nimport Account from './types/account';\r\n\r\n/**\r\n * generateAccount returns a new Algorand address and its corresponding secret key\r\n */\r\nexport default function generateAccount(): Account {\r\n  const keys = nacl.keyPair();\r\n  const encodedPk = address.encodeAddress(keys.publicKey);\r\n  return { addr: encodedPk, sk: keys.secretKey };\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,qBAAqB;AAC3C,OAAO,KAAKC,OAAO,MAAM,oBAAoB;AAG7C;;;AAGA,eAAc,SAAUC,eAAeA,CAAA;EACrC,MAAMC,IAAI,GAAGH,IAAI,CAACI,OAAO,EAAE;EAC3B,MAAMC,SAAS,GAAGJ,OAAO,CAACK,aAAa,CAACH,IAAI,CAACI,SAAS,CAAC;EACvD,OAAO;IAAEC,IAAI,EAAEH,SAAS;IAAEI,EAAE,EAAEN,IAAI,CAACO;EAAS,CAAE;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}