{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class GetTransactionProof extends JSONRequest {\n  constructor(c, intDecoding, round, txID) {\n    super(c, intDecoding);\n    this.round = round;\n    this.txID = txID;\n    this.round = round;\n    this.txID = txID;\n  }\n  path() {\n    return `/v2/blocks/${this.round}/transactions/${this.txID}/proof`;\n  }\n  /**\r\n   * Exclude assets and application data from results\r\n   * The type of hash function used to create the proof, must be one of: \"sha512_256\", \"sha256\"\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const hashType = \"sha256\";\r\n   * const round = 123456;\r\n   * const txId = \"abc123;\r\n   * const txProof = await algodClient.getTransactionProof(round, txId)\r\n   *        .hashType(hashType)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param hashType\r\n   * @category query\r\n   */\n  hashType(hashType) {\n    this.query.hashtype = hashType;\n    return this;\n  }\n}","map":{"version":3,"names":["JSONRequest","GetTransactionProof","constructor","c","intDecoding","round","txID","path","hashType","query","hashtype"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\client\\v2\\algod\\getTransactionProof.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\r\nimport HTTPClient from '../../client';\r\nimport IntDecoding from '../../../types/intDecoding';\r\n\r\nexport default class GetTransactionProof extends JSONRequest {\r\n  constructor(\r\n    c: HTTPClient,\r\n    intDecoding: IntDecoding,\r\n    private round: number,\r\n    private txID: string\r\n  ) {\r\n    super(c, intDecoding);\r\n\r\n    this.round = round;\r\n    this.txID = txID;\r\n  }\r\n\r\n  path() {\r\n    return `/v2/blocks/${this.round}/transactions/${this.txID}/proof`;\r\n  }\r\n\r\n  /**\r\n   * Exclude assets and application data from results\r\n   * The type of hash function used to create the proof, must be one of: \"sha512_256\", \"sha256\"\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const hashType = \"sha256\";\r\n   * const round = 123456;\r\n   * const txId = \"abc123;\r\n   * const txProof = await algodClient.getTransactionProof(round, txId)\r\n   *        .hashType(hashType)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param hashType\r\n   * @category query\r\n   */\r\n  hashType(hashType: string) {\r\n    this.query.hashtype = hashType;\r\n    return this;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,mBAAoB,SAAQD,WAAW;EAC1DE,YACEC,CAAa,EACbC,WAAwB,EAChBC,KAAa,EACbC,IAAY;IAEpB,KAAK,CAACH,CAAC,EAAEC,WAAW,CAAC;IAHb,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,IAAI,GAAJA,IAAI;IAIZ,IAAI,CAACD,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAClB;EAEAC,IAAIA,CAAA;IACF,OAAO,cAAc,IAAI,CAACF,KAAK,iBAAiB,IAAI,CAACC,IAAI,QAAQ;EACnE;EAEA;;;;;;;;;;;;;;;;;EAiBAE,QAAQA,CAACA,QAAgB;IACvB,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAGF,QAAQ;IAC9B,OAAO,IAAI;EACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}