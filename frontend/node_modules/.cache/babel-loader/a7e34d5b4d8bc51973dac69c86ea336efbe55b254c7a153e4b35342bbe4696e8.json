{"ast":null,"code":"import JSONRequest from '../jsonrequest';\nexport default class LookupAssetBalances extends JSONRequest {\n  /**\r\n   * Returns the list of accounts which hold the given asset and their balance.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const assetBalances = await indexerClient.lookupAssetBalances(assetId).do();\r\n   * ```\r\n   *\r\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idbalances)\r\n   * @param index - The asset ID to look up.\r\n   */\n  constructor(c, intDecoding, index) {\n    super(c, intDecoding);\n    this.index = index;\n    this.index = index;\n  }\n  /**\r\n   * @returns `/v2/assets/${index}/balances`\r\n   */\n  path() {\n    return `/v2/assets/${this.index}/balances`;\n  }\n  /**\r\n   * Limit results for pagination.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const maxResults = 20;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param limit - maximum number of results to return.\r\n   * @category query\r\n   */\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  }\n  /**\r\n   * Filtered results should have an asset balance greater than this value.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const minBalance = 1000000;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .currencyGreaterThan(minBalance)\r\n   *        .do();\r\n   * ```\r\n   * @param greater\r\n   * @category query\r\n   */\n  currencyGreaterThan(greater) {\n    // We convert the following to a string for now to correctly include zero values in request parameters.\n    this.query['currency-greater-than'] = greater.toString();\n    return this;\n  }\n  /**\r\n   * Filtered results should have an asset balance less than this value.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const maxBalance = 2000000;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .currencyLessThan(maxBalance)\r\n   *        .do();\r\n   * ```\r\n   * @param lesser\r\n   * @category query\r\n   */\n  currencyLessThan(lesser) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n  /**\r\n   * Specify the next page of results.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const maxResults = 20;\r\n   *\r\n   * const assetBalancesPage1 = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   *\r\n   * const assetBalancesPage2 = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .limit(maxResults)\r\n   *        .nextToken(assetBalancesPage1[\"next-token\"])\r\n   *        .do();\r\n   * ```\r\n   * @param nextToken - provided by the previous results.\r\n   * @category query\r\n   */\n  nextToken(nextToken) {\n    this.query.next = nextToken;\n    return this;\n  }\n  /**\r\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates.\r\n   *\r\n   * #### Example 1\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .includeAll(false)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * #### Example 2\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .includeAll()\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param value\r\n   * @category query\r\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}","map":{"version":3,"names":["JSONRequest","LookupAssetBalances","constructor","c","intDecoding","index","path","limit","query","currencyGreaterThan","greater","toString","currencyLessThan","lesser","nextToken","next","includeAll","value"],"sources":["C:\\Users\\Aditya singh\\AlgoEase\\frontend\\node_modules\\algosdk\\src\\client\\v2\\indexer\\lookupAssetBalances.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest';\r\nimport HTTPClient from '../../client';\r\nimport IntDecoding from '../../../types/intDecoding';\r\n\r\nexport default class LookupAssetBalances extends JSONRequest {\r\n  /**\r\n   * Returns the list of accounts which hold the given asset and their balance.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const assetBalances = await indexerClient.lookupAssetBalances(assetId).do();\r\n   * ```\r\n   *\r\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idbalances)\r\n   * @param index - The asset ID to look up.\r\n   */\r\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\r\n    super(c, intDecoding);\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * @returns `/v2/assets/${index}/balances`\r\n   */\r\n  path() {\r\n    return `/v2/assets/${this.index}/balances`;\r\n  }\r\n\r\n  /**\r\n   * Limit results for pagination.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const maxResults = 20;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param limit - maximum number of results to return.\r\n   * @category query\r\n   */\r\n  limit(limit: number) {\r\n    this.query.limit = limit;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Filtered results should have an asset balance greater than this value.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const minBalance = 1000000;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .currencyGreaterThan(minBalance)\r\n   *        .do();\r\n   * ```\r\n   * @param greater\r\n   * @category query\r\n   */\r\n  currencyGreaterThan(greater: number) {\r\n    // We convert the following to a string for now to correctly include zero values in request parameters.\r\n    this.query['currency-greater-than'] = greater.toString();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Filtered results should have an asset balance less than this value.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const maxBalance = 2000000;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .currencyLessThan(maxBalance)\r\n   *        .do();\r\n   * ```\r\n   * @param lesser\r\n   * @category query\r\n   */\r\n  currencyLessThan(lesser: number) {\r\n    this.query['currency-less-than'] = lesser;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Specify the next page of results.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const maxResults = 20;\r\n   *\r\n   * const assetBalancesPage1 = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .limit(maxResults)\r\n   *        .do();\r\n   *\r\n   * const assetBalancesPage2 = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .limit(maxResults)\r\n   *        .nextToken(assetBalancesPage1[\"next-token\"])\r\n   *        .do();\r\n   * ```\r\n   * @param nextToken - provided by the previous results.\r\n   * @category query\r\n   */\r\n  nextToken(nextToken: string) {\r\n    this.query.next = nextToken;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates.\r\n   *\r\n   * #### Example 1\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .includeAll(false)\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * #### Example 2\r\n   * ```typescript\r\n   * const assetId = 163650;\r\n   * const assetBalances = await indexerClient\r\n   *        .lookupAssetBalances(assetId)\r\n   *        .includeAll()\r\n   *        .do();\r\n   * ```\r\n   *\r\n   * @param value\r\n   * @category query\r\n   */\r\n  includeAll(value = true) {\r\n    this.query['include-all'] = value;\r\n    return this;\r\n  }\r\n}\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gBAAgB;AAIxC,eAAc,MAAOC,mBAAoB,SAAQD,WAAW;EAC1D;;;;;;;;;;;;EAYAE,YAAYC,CAAa,EAAEC,WAAwB,EAAUC,KAAa;IACxE,KAAK,CAACF,CAAC,EAAEC,WAAW,CAAC;IADsC,KAAAC,KAAK,GAALA,KAAK;IAEhE,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEA;;;EAGAC,IAAIA,CAAA;IACF,OAAO,cAAc,IAAI,CAACD,KAAK,WAAW;EAC5C;EAEA;;;;;;;;;;;;;;;;EAgBAE,KAAKA,CAACA,KAAa;IACjB,IAAI,CAACC,KAAK,CAACD,KAAK,GAAGA,KAAK;IACxB,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;EAeAE,mBAAmBA,CAACC,OAAe;IACjC;IACA,IAAI,CAACF,KAAK,CAAC,uBAAuB,CAAC,GAAGE,OAAO,CAACC,QAAQ,EAAE;IACxD,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;EAeAC,gBAAgBA,CAACC,MAAc;IAC7B,IAAI,CAACL,KAAK,CAAC,oBAAoB,CAAC,GAAGK,MAAM;IACzC,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;;;;;;;;EAsBAC,SAASA,CAACA,SAAiB;IACzB,IAAI,CAACN,KAAK,CAACO,IAAI,GAAGD,SAAS;IAC3B,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;;;;;;;;;;EAwBAE,UAAUA,CAACC,KAAK,GAAG,IAAI;IACrB,IAAI,CAACT,KAAK,CAAC,aAAa,CAAC,GAAGS,KAAK;IACjC,OAAO,IAAI;EACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}